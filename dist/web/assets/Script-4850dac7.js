var o=Object.defineProperty;var h=(i,t,e)=>t in i?o(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var s=(i,t,e)=>(h(i,typeof t!="symbol"?t+"":t,e),e);import{r as c,z as n,o as a}from"./index-0069131d.js";class m{constructor(t){s(this,"id");s(this,"createdAt");s(this,"name");s(this,"hrefRegex");s(this,"ipRegex");s(this,"content");s(this,"isActive");this.id=t.id,this.createdAt=new Date(t.createdAt),this.name=t.name,this.hrefRegex=t.hrefRegex,this.ipRegex=t.ipRegex,this.content=t.content,this.isActive=t.isActive}static useContext(){const t=c.useContext(this.context);if(!t)throw new Error("The context was not provided.");return t}static async create(t){const e=n.object({name:n.string().min(1).max(30),hrefRegex:n.string().optional(),ipRegex:n.string().optional(),content:n.string().min(5)}),r=await a({method:"POST",url:"/main/script",data:e.parse(t)});return new this(r)}static async find(){return(await a({url:"/main/script"})).map(e=>new this(e))}static async findOne(t){const e=await a({url:`/main/script/${n.number().parse(t)}`});return new this(e)}async edit(t){const e=n.object({name:n.string().min(1).max(30),hrefRegex:n.string().nullable(),ipRegex:n.string().nullable(),content:n.string().min(5)}),r=await a({method:"POST",url:`/main/script/${this.id}`,data:e.parse(t)});return Object.assign(this,r),this}async destroy(){return await a({method:"DELETE",url:`/main/script/${this.id}`}),!0}async changeStatus(){return await a({method:"POST",url:`/main/script/${this.id}/change-status`})}}s(m,"context",c.createContext(void 0));export{m as S};
